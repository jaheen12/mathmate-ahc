name: 🤖 Android Build & Release

on:
  push:
    branches: [ "main", "develop" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release Type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

env:
  NODE_VERSION: '20'
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'zulu'

jobs:
  validate:
    name: 🔍 Validate & Test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      should_release: ${{ steps.check.outputs.should_release }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 🧪 Run tests
        run: npm test

      - name: 📊 Get package version
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: ✅ Check if should release
        id: check
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "should_release=true" >> $GITHUB_OUTPUT
          else
            echo "should_release=false" >> $GITHUB_OUTPUT
          fi

  build:
    name: 🔨 Build Android App
    runs-on: ubuntu-latest
    needs: validate
    strategy:
      matrix:
        build_type: [debug, release]
        exclude:
          # Exclude release builds for pull requests for efficiency
          - build_type: ${{ (github.event_name == 'pull_request' && 'release') || 'never' }}
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: ☕ Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: 🐘 Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📋 Create environment file
        env:
          VITE_API_KEY: ${{ secrets.VITE_API_KEY }}
          VITE_AUTH_DOMAIN: ${{ secrets.VITE_AUTH_DOMAIN }}
          VITE_PROJECT_ID: ${{ secrets.VITE_PROJECT_ID }}
          VITE_STORAGE_BUCKET: ${{ secrets.VITE_STORAGE_BUCKET }}
          VITE_MESSAGING_SENDER_ID: ${{ secrets.VITE_MESSAGING_SENDER_ID }}
          VITE_APP_ID: ${{ secrets.VITE_APP_ID }}
          VITE_MEASUREMENT_ID: ${{ secrets.VITE_MEASUREMENT_ID }}
        run: |
          cat > .env.production << EOF
          VITE_API_KEY=$VITE_API_KEY
          VITE_AUTH_DOMAIN=$VITE_AUTH_DOMAIN
          VITE_PROJECT_ID=$VITE_PROJECT_ID
          VITE_STORAGE_BUCKET=$VITE_STORAGE_BUCKET
          VITE_MESSAGING_SENDER_ID=$VITE_MESSAGING_SENDER_ID
          VITE_APP_ID=$VITE_APP_ID
          VITE_MEASUREMENT_ID=$VITE_MEASUREMENT_ID
          EOF

      - name: 🏗️ Build web assets
        run: npm run build

      - name: 🔧 Configure Capacitor
        run: |
          if [ ! -f capacitor.config.ts ]; then
            echo "❌ capacitor.config.ts not found. Please ensure it exists."
            exit 1
          fi
          
          if [ ! -d "android" ]; then
            npx cap add android
          else
            echo "✅ Android platform already exists"
          fi

      - name: 🔄 Sync Capacitor
        run: npx cap sync android

      - name: 📝 Create keystore for release builds
        if: matrix.build_type == 'release'
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          if [ -z "$ANDROID_KEYSTORE_BASE64" ]; then
            echo "⚠️ ANDROID_KEYSTORE_BASE64 secret not set. Cannot build release."
            exit 1
          else
            echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/app/release.keystore
          fi

      - name: 📝 Configure signing for release
        if: matrix.build_type == 'release'
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          cat >> android/gradle.properties << EOF
          android.useAndroidX=true
          android.enableJetifier=true
          MYAPP_RELEASE_STORE_FILE=release.keystore
          MYAPP_RELEASE_KEY_ALIAS=${KEY_ALIAS}
          MYAPP_RELEASE_STORE_PASSWORD=${KEYSTORE_PASSWORD}
          MYAPP_RELEASE_KEY_PASSWORD=${KEY_PASSWORD}
          EOF

      - name: 🔧 Make gradlew executable
        run: chmod +x ./android/gradlew

      - name: 🔨 Build Android APK
        run: |
          cd android
          if [ "${{ matrix.build_type }}" == "release" ]; then
            ./gradlew assembleRelease --stacktrace
          else
            ./gradlew assembleDebug --stacktrace
          fi

      - name: 📦 Prepare APK artifacts
        id: prepare_artifacts
        run: |
          mkdir -p artifacts
          BUILD_TYPE=${{ matrix.build_type }}
          VERSION=${{ needs.validate.outputs.version }}
          ARTIFACT_PATH=$(find android/app/build/outputs/apk/$BUILD_TYPE -name "*.apk" | head -n 1)
          
          if [ -z "$ARTIFACT_PATH" ]; then
            echo "❌ APK not found!"
            exit 1
          fi
          
          NEW_NAME="mathmate-$BUILD_TYPE-v$VERSION.apk"
          cp "$ARTIFACT_PATH" "artifacts/$NEW_NAME"
          echo "artifact_name=mathmate-$BUILD_TYPE-v$VERSION" >> $GITHUB_OUTPUT
          echo "apk_name=$NEW_NAME" >> $GITHUB_OUTPUT
          echo "✅ Renamed APK to $NEW_NAME"

      - name: ⬆️ Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepare_artifacts.outputs.artifact_name }}
          path: artifacts/${{ steps.prepare_artifacts.outputs.apk_name }}
          if-no-files-found: error
          retention-days: 30

  release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    needs: [validate, build]
    if: needs.validate.outputs.should_release == 'true'
    steps:
      - name: 📥 Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: mathmate-release-v${{ needs.validate.outputs.version }}
          path: ./release

      - name: 🏷️ Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.validate.outputs.version }}
          name: MathMate v${{ needs.validate.outputs.version }}
          body: |
            ## 🚀 MathMate v${{ needs.validate.outputs.version }}
            
            Find the latest changes in the commit history.
            
            **Minimum Android Version**: API 22 (Lollipop)
          files: ./release/*.apk
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}