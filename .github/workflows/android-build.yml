name: Android CI - Build Signed APK & AAB

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-sign:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Create .env file from Secrets
        env:
          VITE_API_KEY: ${{ secrets.VITE_API_KEY }}
          VITE_AUTH_DOMAIN: ${{ secrets.VITE_AUTH_DOMAIN }}
          VITE_PROJECT_ID: ${{ secrets.VITE_PROJECT_ID }}
          VITE_STORAGE_BUCKET: ${{ secrets.VITE_STORAGE_BUCKET }}
          VITE_MESSAGING_SENDER_ID: ${{ secrets.VITE_MESSAGING_SENDER_ID }}
          VITE_APP_ID: ${{ secrets.VITE_APP_ID }}
          VITE_MEASUREMENT_ID: ${{ secrets.VITE_MEASUREMENT_ID }}
        run: |
          echo "VITE_API_KEY=$VITE_API_KEY" >> .env
          echo "VITE_AUTH_DOMAIN=$VITE_AUTH_DOMAIN" >> .env
          echo "VITE_PROJECT_ID=$VITE_PROJECT_ID" >> .env
          echo "VITE_STORAGE_BUCKET=$VITE_STORAGE_BUCKET" >> .env
          echo "VITE_MESSAGING_SENDER_ID=$VITE_MESSAGING_SENDER_ID" >> .env
          echo "VITE_APP_ID=$VITE_APP_ID" >> .env
          echo "VITE_MEASUREMENT_ID=$VITE_MEASUREMENT_ID" >> .env

      - name: Build web assets
        run: npm run build

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Android SDK 34
        uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools: 34.0.0

      - name: Install Capacitor CLI
        run: npm install -g @capacitor/cli

      # âœ… Only sync, do not add platform
      - name: Sync Capacitor with Android
        run: npx cap sync android

      # --- SIGNING SETUP ---
      - name: Decode Keystore from Secret
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "Decoding keystore to android/app/release.keystore..."
          echo $ANDROID_KEYSTORE_BASE64 | base64 --decode > ${{ github.workspace }}/android/app/release.keystore

      - name: Create Keystore Properties File
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "storePassword=${KEYSTORE_PASSWORD}" > ${{ github.workspace }}/android/keystore.properties
          echo "keyAlias=${KEY_ALIAS}" >> ${{ github.workspace }}/android/keystore.properties
          echo "keyPassword=${KEY_PASSWORD}" >> ${{ github.workspace }}/android/keystore.properties
          echo "storeFile=${{ github.workspace }}/android/app/release.keystore" >> ${{ github.workspace }}/android/keystore.properties

      - name: Make gradlew executable
        run: chmod +x ./gradlew
        working-directory: ./android

      - name: Build Signed APK & AAB
        run: ./gradlew clean assembleRelease bundleRelease
        working-directory: ./android

      - name: List build outputs
        run: ls -R android/app/build/outputs/

      # --- UPLOAD ARTIFACTS ---
      - name: Upload Signed APK
        uses: actions/upload-artifact@v4
        with:
          name: app-signed-release
          path: android/app/build/outputs/apk/release/app-release.apk
          if-no-files-found: error

      - name: Upload Signed AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-signed-release-aab
          path: android/app/build/outputs/bundle/release/app-release.aab
          if-no-files-found: error